
name: CI
on: [push]

jobs:
  build-linux:
    name: Build Linux 64-bit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'recursive'
          lfs: true
      - run: sudo apt-get update && sudo apt-get install -y nasm libsdl2-dev
      - run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
      - run: cmake --build build --config RelWithDebInfo
      - run: mkdir build-stripped && strip --strip-unneeded -o build-stripped/libOpenTemple.Native.so build/libOpenTemple.Native.so
      - uses: actions/upload-artifact@master
        with:
          name: native_lib_linux
          path: 'build/libOpenTemple.Native.so'
      - uses: actions/upload-artifact@master
        with:
          name: native_lib_linux_stripped
          path: 'build-stripped/libOpenTemple.Native.so'

  build-windows:
    name: Build Windows (${{ matrix.arch }})
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, x86]
        # The MSBuild configuration for 32-bit is not called x86, but Win32
        include:
          - arch: x64
            platform: x64
          - arch: x86
            platform: Win32
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
        lfs: true
    - name: Build
      run: |
        cmake -B build -A $PLATFORM -DCMAKE_BUILD_TYPE=RelWithDebInfo .
        cmake --build build --config RelWithDebInfo
        mkdir dist
        cp build/RelWithDebInfo/OpenTemple.Native.dll dist
        cp build/RelWithDebInfo/OpenTemple.Native.pdb dist
      shell: bash
      env:
        PLATFORM: ${{ matrix.platform }}
    - uses: actions/upload-artifact@master
      with:
          name: native_lib_windows
          path: dist

  build-macosx:
    name: Build MacOSX 64-bit
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'recursive'
          lfs: true
      - run: brew install ninja nasm          
      - run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -G Ninja ..
      - run: cmake --build build --config RelWithDebInfo
      - run: mkdir build-stripped && strip -x -o build-stripped/libOpenTemple.Native.dylib build/libOpenTemple.Native.dylib
      - uses: actions/upload-artifact@master
        with:
          name: native_lib_macos
          path: 'build/libOpenTemple.Native.dylib'
      - uses: actions/upload-artifact@master
        with:
          name: native_lib_macos_stripped
          path: 'build-stripped/libOpenTemple.Native.dylib'

  build-nuget-package:
    name: Build NuGet Package
    needs: [build-linux, build-windows, build-macosx]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      # Download all the dependents
      - uses: actions/download-artifact@master
        with:
          name: native_lib_linux
      - uses: actions/download-artifact@master
        with:
          name: native_lib_windows
      - uses: actions/download-artifact@master
        with:
          name: native_lib_windows_pdb
      - uses: actions/download-artifact@master
        with:
          name: native_lib_macos
      - name: Setup Nuget.exe
        uses: warrenbuckley/Setup-Nuget@v1
      - run: |
          nuget pack -NonInteractive
          nuget source Add -Name "GitHub" -Source "https://nuget.pkg.github.com/shartte/index.json" -UserName shartte -Password ${{ secrets.GITHUB_TOKEN }}
          nuget push "*.nupkg" -Source "GitHub"
