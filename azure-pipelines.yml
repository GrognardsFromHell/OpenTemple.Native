# Schema reference: https://aka.ms/yaml

trigger:
- master

variables:
  Major: '1'
  Minor: '0'
  Patch: '0'

jobs:

- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: sudo apt-get install -y nasm
  - checkout: self
    submodules: true
  - task: CMake@1
    inputs:
      cmakeArgs: $(Build.SourcesDirectory) -DCMAKE_BUILD_TYPE=RelWithDebInfo
  - script: cd build && make
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: native_lib_linux
      targetPath: 'build/libSpicyTemple.Native.so'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - checkout: self
    submodules: true
  - script: |
      mkdir build && cd build
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      cmake $(Build.SourcesDirectory) -G Ninja -DCMAKE_MAKE_PROGRAM=$(Build.SourcesDirectory)\tools-win\ninja.exe -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe
      ..\tools-win\ninja
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: native_lib_windows
      targetPath: 'build/SpicyTemple.Native.dll'

- job: Mac
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: brew install ninja nasm
  - checkout: self
    submodules: true
  - task: CMake@1
    inputs:
      cmakeArgs: $(Build.SourcesDirectory) -DCMAKE_BUILD_TYPE=RelWithDebInfo -G Ninja
  - script: cd build && ninja
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: native_lib_osx
      targetPath: 'build/libSpicyTemple.Native.dylib'

- job: AggregateBuildArtifacts
  pool:
    vmImage: 'vs2017-win2016'
  dependsOn:
  - Windows
  - Mac
  - Linux
  steps:
  - checkout: self
    submodules: false # Submodules are not needed to build the NuGet package
  - task: DownloadPipelineArtifact@1
    inputs:
      downloadPath: $(System.DefaultWorkingDirectory)/build
  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      packagesToPack: SpicyTemple.Native.nuspec
      versioningScheme: byPrereleaseNumber
      majorVersion: '$(Major)'
      minorVersion: '$(Minor)'
      patchVersion: '$(Patch)'
      verbosityPack: 'detailed'
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: shartte
      action: 'create'
      target: '$(Build.SourceVersion)'
      assets: '*.nupkg'
      tagSource: 'manual'
      tag: 'v$(Build.BuildNumber)'
